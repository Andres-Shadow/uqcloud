# Descripción: Archivo de configuración de Docker Compose para la orquestación de los servicios de la aplicación UQCloud.
# Autores: Equipo de Iteración 3 Seminario de Grado Desktop Cloud:
# Sebastian Burgos Puentes, Jose ALejandro Zambrano, Andres Dussan, Julian Acosta.

services:
  #servicio del servidor de procesamiento
  procesamiento:
    build: ./servidor_procesamiento
    ports:
      - "8081:8081"
    expose:
      - "8081"
    environment:
      - DATABASE=database 
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USER=root
      - DB_NAME=uqcloud
    depends_on:
      - database

  #servicio del servidor web
  web:
    build: ./servidor_web
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - servidor_procesamiento=procesamiento
    depends_on:
      - procesamiento

  #servicio de la base de datos
  database:
    image: mysql:5.7
    ports:
      - "3307:3306"
    expose:
      - "3307"
    volumes:
    - mysql-data:/var/lib/mysql
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_DATABASE: uqcloud
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_TIME_ZONE: 'America/Bogota'
  
  # Servicio de Prometheus para monitoreo
  prometheus:
    image: docker.io/prom/prometheus:v2.54.1
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    volumes:
      - ./metrics_config/prometheus.yml:/etc/prometheus/prometheus.yml:wr 
    restart: unless-stopped
  
  # Servicio del actualizador de configuración de Prometheus
  prometheus-config:
    build: ./metrics_config
    volumes:
      # Se copia nuevamente el archivo prometheus ya que va a sincronizar el archivo de configuración del servicio de Prometheus
      # de arriba por medio del volumen, es como un puente ya que el script lo va a estar modificando 
      - ./metrics_config/prometheus.yml:/etc/prometheus/prometheus.yml:wr 
      - ./metrics_config/update_prometheus_config.sh:/etc/prometheus/update_prometheus_config.sh:x
    depends_on:
      - procesamiento

  # Servicio de Grafana para visualización de métricas
  grafana:
    image: docker.io/grafana/grafana-oss:11.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true  # Permitir embebidos
      # Para configurar por defecto el usuario y contraseña de Grafana
      # - GF_SECURITY_ADMIN_PASSWORD=password
      # - GF_SECURITY_ADMIN_USER=user
    volumes:
      - ./metrics_config/grafana/provisioning:/etc/grafana/provisioning/
    restart: unless-stopped

volumes:
  mysql-data:
    driver: local